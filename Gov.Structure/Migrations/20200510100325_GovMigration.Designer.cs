// <auto-generated />
using System;
using Gov.Structure;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Gov.Structure.Migrations
{
    [DbContext(typeof(GovContext))]
    [Migration("20200510100325_GovMigration")]
    partial class GovMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("Gov.Core.Camera", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("varchar(256) CHARACTER SET utf8mb4")
                        .HasMaxLength(256);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("DataFine")
                        .IsRequired()
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("DataInizio")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("varchar(256) CHARACTER SET utf8mb4")
                        .HasMaxLength(256);

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.ToTable("Camera");
                });

            modelBuilder.Entity("Gov.Core.Coalizione", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("varchar(256) CHARACTER SET utf8mb4")
                        .HasMaxLength(256);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Denominazione")
                        .IsRequired()
                        .HasColumnType("varchar(256) CHARACTER SET utf8mb4")
                        .HasMaxLength(256);

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("varchar(256) CHARACTER SET utf8mb4")
                        .HasMaxLength(256);

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.ToTable("Coalizione");
                });

            modelBuilder.Entity("Gov.Core.Dicastero", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("varchar(256) CHARACTER SET utf8mb4")
                        .HasMaxLength(256);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("DataFine")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("DataGiuramento")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("DataInizio")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("DataSfiducia")
                        .HasColumnType("datetime(6)");

                    b.Property<int?>("GovernoId")
                        .HasColumnType("int");

                    b.Property<int?>("MinisteroId")
                        .HasColumnType("int");

                    b.Property<int?>("MinistroId")
                        .HasColumnType("int");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("varchar(256) CHARACTER SET utf8mb4")
                        .HasMaxLength(256);

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("GovernoId");

                    b.HasIndex("MinisteroId");

                    b.HasIndex("MinistroId");

                    b.ToTable("Dicastero");
                });

            modelBuilder.Entity("Gov.Core.Entity.Contenuto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("ContentuoCard")
                        .IsRequired()
                        .HasColumnType("varchar(256) CHARACTER SET utf8mb4")
                        .HasMaxLength(256);

                    b.Property<string>("CreatedBy")
                        .HasColumnType("varchar(256) CHARACTER SET utf8mb4")
                        .HasMaxLength(256);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("PaginaId")
                        .HasColumnType("int");

                    b.Property<string>("Tipo")
                        .HasColumnType("varchar(10) CHARACTER SET utf8mb4")
                        .HasMaxLength(10);

                    b.Property<int>("TipoContenutoId")
                        .HasColumnType("int");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("varchar(256) CHARACTER SET utf8mb4")
                        .HasMaxLength(256);

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("PaginaId");

                    b.ToTable("Contenuto");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ContentuoCard = "Da questa pagina è possibile registrare un nuovo Premier",
                            CreatedBy = "Caricamento",
                            CreatedDate = new DateTime(2020, 5, 10, 12, 3, 25, 177, DateTimeKind.Local).AddTicks(5802),
                            PaginaId = 1,
                            Tipo = "Testo",
                            TipoContenutoId = 1,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 2,
                            ContentuoCard = "user-secret",
                            CreatedBy = "Caricamento",
                            CreatedDate = new DateTime(2020, 5, 10, 12, 3, 25, 177, DateTimeKind.Local).AddTicks(6233),
                            PaginaId = 1,
                            Tipo = "Icona",
                            TipoContenutoId = 2,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 3,
                            ContentuoCard = "/premier/inserimento",
                            CreatedBy = "Caricamento",
                            CreatedDate = new DateTime(2020, 5, 10, 12, 3, 25, 177, DateTimeKind.Local).AddTicks(6250),
                            PaginaId = 1,
                            Tipo = "Link",
                            TipoContenutoId = 4,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 4,
                            ContentuoCard = "Da questa pagina è possibile modificare un Premier",
                            CreatedBy = "Caricamento",
                            CreatedDate = new DateTime(2020, 5, 10, 12, 3, 25, 177, DateTimeKind.Local).AddTicks(6255),
                            PaginaId = 2,
                            Tipo = "Testo",
                            TipoContenutoId = 1,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 5,
                            ContentuoCard = "user-secret",
                            CreatedBy = "Caricamento",
                            CreatedDate = new DateTime(2020, 5, 10, 12, 3, 25, 177, DateTimeKind.Local).AddTicks(6259),
                            PaginaId = 2,
                            Tipo = "Icona",
                            TipoContenutoId = 2,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 6,
                            ContentuoCard = "/premier/modifica",
                            CreatedBy = "Caricamento",
                            CreatedDate = new DateTime(2020, 5, 10, 12, 3, 25, 177, DateTimeKind.Local).AddTicks(6263),
                            PaginaId = 2,
                            Tipo = "Link",
                            TipoContenutoId = 4,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 7,
                            ContentuoCard = "Da questa pagina è possibile visualizzare i Premier",
                            CreatedBy = "Caricamento",
                            CreatedDate = new DateTime(2020, 5, 10, 12, 3, 25, 177, DateTimeKind.Local).AddTicks(6267),
                            PaginaId = 3,
                            Tipo = "Testo",
                            TipoContenutoId = 1,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 8,
                            ContentuoCard = "user-secret",
                            CreatedBy = "Caricamento",
                            CreatedDate = new DateTime(2020, 5, 10, 12, 3, 25, 177, DateTimeKind.Local).AddTicks(6271),
                            PaginaId = 3,
                            Tipo = "Icona",
                            TipoContenutoId = 2,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 9,
                            ContentuoCard = "/premier/visualizza",
                            CreatedBy = "Caricamento",
                            CreatedDate = new DateTime(2020, 5, 10, 12, 3, 25, 177, DateTimeKind.Local).AddTicks(6274),
                            PaginaId = 3,
                            Tipo = "Link",
                            TipoContenutoId = 4,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("Gov.Core.Entity.Pagina", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Codice")
                        .IsRequired()
                        .HasColumnType("varchar(10) CHARACTER SET utf8mb4")
                        .HasMaxLength(10);

                    b.Property<string>("CreatedBy")
                        .HasColumnType("varchar(256) CHARACTER SET utf8mb4")
                        .HasMaxLength(256);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Denominazione")
                        .IsRequired()
                        .HasColumnType("varchar(256) CHARACTER SET utf8mb4")
                        .HasMaxLength(256);

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("varchar(256) CHARACTER SET utf8mb4")
                        .HasMaxLength(256);

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.ToTable("Pagina");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Codice = "Premier",
                            CreatedBy = "Caricamento",
                            CreatedDate = new DateTime(2020, 5, 10, 12, 3, 25, 177, DateTimeKind.Local).AddTicks(2917),
                            Denominazione = "Inserimento Premier",
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 2,
                            Codice = "Premier",
                            CreatedBy = "Caricamento",
                            CreatedDate = new DateTime(2020, 5, 10, 12, 3, 25, 177, DateTimeKind.Local).AddTicks(3572),
                            Denominazione = "Modifica Premier",
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 3,
                            Codice = "Premier",
                            CreatedBy = "Caricamento",
                            CreatedDate = new DateTime(2020, 5, 10, 12, 3, 25, 177, DateTimeKind.Local).AddTicks(3594),
                            Denominazione = "Visualizzazione Premier",
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("Gov.Core.Entity.TipoContenuto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Codice")
                        .IsRequired()
                        .HasColumnType("varchar(10) CHARACTER SET utf8mb4")
                        .HasMaxLength(10);

                    b.Property<int?>("ContenutoId")
                        .HasColumnType("int");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("varchar(256) CHARACTER SET utf8mb4")
                        .HasMaxLength(256);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("varchar(256) CHARACTER SET utf8mb4")
                        .HasMaxLength(256);

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("ContenutoId");

                    b.ToTable("TipoContenuto");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Codice = "Testo",
                            CreatedBy = "Caricamento",
                            CreatedDate = new DateTime(2020, 5, 10, 12, 3, 25, 173, DateTimeKind.Local).AddTicks(4011),
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 2,
                            Codice = "Icona",
                            CreatedBy = "Caricamento",
                            CreatedDate = new DateTime(2020, 5, 10, 12, 3, 25, 175, DateTimeKind.Local).AddTicks(9709),
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 3,
                            Codice = "Immagine",
                            CreatedBy = "Caricamento",
                            CreatedDate = new DateTime(2020, 5, 10, 12, 3, 25, 175, DateTimeKind.Local).AddTicks(9758),
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 4,
                            Codice = "Link",
                            CreatedBy = "Caricamento",
                            CreatedDate = new DateTime(2020, 5, 10, 12, 3, 25, 175, DateTimeKind.Local).AddTicks(9763),
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("Gov.Core.Governo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("varchar(256) CHARACTER SET utf8mb4")
                        .HasMaxLength(256);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("DataFiducia")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("DataIncarico")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("DataRevoca")
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("IsFiducia")
                        .HasColumnType("tinyint(1)");

                    b.Property<int?>("LegislaturaId")
                        .HasColumnType("int");

                    b.Property<int>("NumeroMinisteri")
                        .HasColumnType("int");

                    b.Property<int>("NumeroMinisteriSenzaPortafogio")
                        .HasColumnType("int");

                    b.Property<int>("NumeroVotiCamera")
                        .HasColumnType("int");

                    b.Property<int>("NumeroVotiSenato")
                        .HasColumnType("int");

                    b.Property<int?>("PremierId")
                        .HasColumnType("int");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("varchar(256) CHARACTER SET utf8mb4")
                        .HasMaxLength(256);

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("LegislaturaId");

                    b.HasIndex("PremierId");

                    b.ToTable("Governo");
                });

            modelBuilder.Entity("Gov.Core.Legislatura", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("CameraId")
                        .HasColumnType("int");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("varchar(256) CHARACTER SET utf8mb4")
                        .HasMaxLength(256);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("DataFine")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("DataInizio")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("Numero")
                        .HasColumnType("int");

                    b.Property<int?>("SenatoId")
                        .HasColumnType("int");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("varchar(256) CHARACTER SET utf8mb4")
                        .HasMaxLength(256);

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("CameraId");

                    b.HasIndex("SenatoId");

                    b.ToTable("Legislatura");
                });

            modelBuilder.Entity("Gov.Core.Militanza", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("varchar(256) CHARACTER SET utf8mb4")
                        .HasMaxLength(256);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("DataFine")
                        .IsRequired()
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("DataInizio")
                        .IsRequired()
                        .HasColumnType("datetime(6)");

                    b.Property<int?>("MinistroId")
                        .HasColumnType("int");

                    b.Property<int?>("PartitoId")
                        .HasColumnType("int");

                    b.Property<int?>("PremierId")
                        .HasColumnType("int");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("varchar(256) CHARACTER SET utf8mb4")
                        .HasMaxLength(256);

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("MinistroId");

                    b.HasIndex("PartitoId");

                    b.HasIndex("PremierId");

                    b.ToTable("Militanza");
                });

            modelBuilder.Entity("Gov.Core.Ministero", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("varchar(256) CHARACTER SET utf8mb4")
                        .HasMaxLength(256);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("DataCessazione")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("DataIstituzione")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Denominazione")
                        .IsRequired()
                        .HasColumnType("varchar(256) CHARACTER SET utf8mb4")
                        .HasMaxLength(256);

                    b.Property<bool>("IsSenzaPortafoglio")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("varchar(256) CHARACTER SET utf8mb4")
                        .HasMaxLength(256);

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.ToTable("Ministero");
                });

            modelBuilder.Entity("Gov.Core.Ministro", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Cognome")
                        .IsRequired()
                        .HasColumnType("varchar(256) CHARACTER SET utf8mb4")
                        .HasMaxLength(256);

                    b.Property<string>("CreatedBy")
                        .HasColumnType("varchar(256) CHARACTER SET utf8mb4")
                        .HasMaxLength(256);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("DataNascita")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("varchar(256) CHARACTER SET utf8mb4")
                        .HasMaxLength(256);

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("varchar(256) CHARACTER SET utf8mb4")
                        .HasMaxLength(256);

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.ToTable("Ministro");
                });

            modelBuilder.Entity("Gov.Core.Partito", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("CameraId")
                        .HasColumnType("int");

                    b.Property<int?>("CoalizioneId")
                        .HasColumnType("int");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("varchar(256) CHARACTER SET utf8mb4")
                        .HasMaxLength(256);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Nome")
                        .HasColumnType("varchar(256) CHARACTER SET utf8mb4")
                        .HasMaxLength(256);

                    b.Property<int?>("SenatoId")
                        .HasColumnType("int");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("varchar(256) CHARACTER SET utf8mb4")
                        .HasMaxLength(256);

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("CameraId");

                    b.HasIndex("CoalizioneId");

                    b.HasIndex("SenatoId");

                    b.ToTable("Partito");
                });

            modelBuilder.Entity("Gov.Core.Premier", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Cognome")
                        .IsRequired()
                        .HasColumnType("varchar(256) CHARACTER SET utf8mb4")
                        .HasMaxLength(256);

                    b.Property<string>("CreatedBy")
                        .HasColumnType("varchar(256) CHARACTER SET utf8mb4")
                        .HasMaxLength(256);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("DataNascita")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("varchar(256) CHARACTER SET utf8mb4")
                        .HasMaxLength(256);

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("varchar(256) CHARACTER SET utf8mb4")
                        .HasMaxLength(256);

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.ToTable("Premier");
                });

            modelBuilder.Entity("Gov.Core.Senato", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("varchar(256) CHARACTER SET utf8mb4")
                        .HasMaxLength(256);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("DataFine")
                        .IsRequired()
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("DataInizio")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("varchar(256) CHARACTER SET utf8mb4")
                        .HasMaxLength(256);

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.ToTable("Senato");
                });

            modelBuilder.Entity("Gov.Core.Dicastero", b =>
                {
                    b.HasOne("Gov.Core.Governo", null)
                        .WithMany("Dicasteri")
                        .HasForeignKey("GovernoId");

                    b.HasOne("Gov.Core.Ministero", "Ministero")
                        .WithMany()
                        .HasForeignKey("MinisteroId");

                    b.HasOne("Gov.Core.Ministro", "Ministro")
                        .WithMany()
                        .HasForeignKey("MinistroId");
                });

            modelBuilder.Entity("Gov.Core.Entity.Contenuto", b =>
                {
                    b.HasOne("Gov.Core.Entity.Pagina", null)
                        .WithMany("Contenuti")
                        .HasForeignKey("PaginaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Gov.Core.Entity.TipoContenuto", b =>
                {
                    b.HasOne("Gov.Core.Entity.Contenuto", null)
                        .WithMany("TipoConenuto")
                        .HasForeignKey("ContenutoId");
                });

            modelBuilder.Entity("Gov.Core.Governo", b =>
                {
                    b.HasOne("Gov.Core.Legislatura", "Legislatura")
                        .WithMany()
                        .HasForeignKey("LegislaturaId");

                    b.HasOne("Gov.Core.Premier", "Premier")
                        .WithMany()
                        .HasForeignKey("PremierId");
                });

            modelBuilder.Entity("Gov.Core.Legislatura", b =>
                {
                    b.HasOne("Gov.Core.Camera", "Camera")
                        .WithMany()
                        .HasForeignKey("CameraId");

                    b.HasOne("Gov.Core.Senato", "Senato")
                        .WithMany()
                        .HasForeignKey("SenatoId");
                });

            modelBuilder.Entity("Gov.Core.Militanza", b =>
                {
                    b.HasOne("Gov.Core.Ministro", null)
                        .WithMany("Militanze")
                        .HasForeignKey("MinistroId");

                    b.HasOne("Gov.Core.Partito", "Partito")
                        .WithMany()
                        .HasForeignKey("PartitoId");

                    b.HasOne("Gov.Core.Premier", null)
                        .WithMany("Militanze")
                        .HasForeignKey("PremierId");
                });

            modelBuilder.Entity("Gov.Core.Partito", b =>
                {
                    b.HasOne("Gov.Core.Camera", null)
                        .WithMany("Partiti")
                        .HasForeignKey("CameraId");

                    b.HasOne("Gov.Core.Coalizione", "Coalizione")
                        .WithMany()
                        .HasForeignKey("CoalizioneId");

                    b.HasOne("Gov.Core.Senato", null)
                        .WithMany("Partiti")
                        .HasForeignKey("SenatoId");
                });
#pragma warning restore 612, 618
        }
    }
}
